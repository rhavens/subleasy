<div class='ui wrapper' style='text-align:center;'>
	<h1 class='page-title'>Sublets on the Market</h1>
	<div id='map-container'>
	 	<div id='map-canvas'></div>
	</div>
	<p class='item'><br><br></p>
	<div class='ui top attached tabular menu' id='filter-tab'>
		<div class='active item filter-item' id='filter-by'>Filter by:</div>
  	<a onmousedown="togText('rent')" class='active item filter-item' id='rent'>
    	Rent
  	</a>
  	<a onmousedown="togText('date')" class='item filter-item' id='date'>
    	Available Dates
 		</a>
 		<a onmousedown="togText('clear')" class='item filter-item' id='clear'>
    	Clear Filters
 		</a>
	</div>

	<!-- FILTERS -->
	<div class='ui bottom attached segment' id='filter-content'>
		<p class='item no-top-margin'><br/></p>
		<div class='ui' style='display:block' id='c-rent'>
			<p class='item no-top-margin'>Markers on the map are colored by monthly rent. Low rent is greenish, high rent is reddish.<br/><br/>Filter results by max rent: <input class='item' type='number' id='maxrent' value=0><br/></p>
			<div class='ui blue button'>
				<p id='maxrentbutton' class='item' style="margin:0;">Go</p>
			</div>
		</div>
		<div class='ui' style='display:none' id='c-date'>
			<p class='item'>Remove offers from the map that don't fit your schedule. Markers on the map are colored by monthly rent.</p>
			<p class='item'>Start date: <%= date_field_tag 'start-date', nil, class: 'item' %></p>
			<p class='item'>End date: <%= date_field_tag 'end-date', nil, class: 'item' %></p>
			<div class='ui blue button'>
				<p id='datebutton' class='item' style="margin:0;">Go</p>
			</div>
		</div>
		<p class='item no-top-margin'><br/></p>
	</div>
	<p class='item'><br><br></p>
</div>
	<!-- MODALS -->
<div>
 	<% @offers.each do |offer| %>
 	<div id='<%= offer.id %>modal' class='ui' style='display:none; text-align:center;'>
		<div class='text-wrapper modal-styles'>
			<%= render partial: 'offer', locals: {offer: offer } %>
			<p class='item'><br/></p>
		</div>
	</div>
	<% end %>
</div>

<!-- This is the modal that is shown. Data is appended to inner div. -->
<div>
 	<div id='offersmodal' class='ui modal'>
 		<i class='close icon'></i>
		<div style='text-align:center;'>
		</div>
	</div>
</div>

<script type='text/javascript'>
	function test(value) {
		console.log('test ' + value)
	}
	//-------------------------------------------//
	//		Google maps stuff
	//
	var map;
	var markers = [];
	function initialize() {
	 	var mapOptions = {
	    	zoom: 14,
		    center: new google.maps.LatLng(42.407484, -71.119023)
	  	};
	  	map = new google.maps.Map(document.getElementById('map-canvas'),
	      mapOptions);
		generateMarkersByParameter(offers, 'rent')
	}

	function generateMarkersByParameter(array, parameter) {
		deleteMarkers()
		if (!array.length) return;
		minP = array[0][parameter]
		maxP = array[array.length-1][parameter]
		for (var i = 0; i < array.length; i++) {
	  	  	var pinImage = new google.maps.MarkerImage('http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|' + hsv2rgb(array[i][parameter], minP, maxP),
	   	        new google.maps.Size(21, 34),
	   	        new google.maps.Point(0,0),
	   	        new google.maps.Point(10, 34));
	  	  	var marker = new google.maps.Marker({
			    	position: new google.maps.LatLng(array[i].latitude, array[i].longitude),
			    	map: map,
			    	icon: pinImage,
			    	url: '#' + array[i].id.toString(),
			    	title: array[i].line1
	   	  	});
	   	  // modal listener
		   	google.maps.event.addListener(marker, 'click', function() {
		   			//for (var i = 0; i < offers_filtered.length; i++)
		   			var offersmodal = $('#offersmodal');
		   			var offersmodal_inner = $('#offersmodal > div');
		   			offersmodal_inner.empty();
		   			// if we have multiple offers display text indicating so

		   			offers_for_modal = genOfferModal(this.title);
		   			console.log(offers_for_modal);
		   			if (offers_for_modal.length > 1) {
		   				console.log("TODO");
		   				offersmodal_inner.append("<p class='item' style='padding-top:1em; margin-bottom:1em;'>There are multiple sublets available at this location. Scroll down to view.</p>");
		   				// if (offers_for_modal.length > 1) {
		   				// 	offersmodal.modal('show');
		   				// 	$('#offersmodal > div').append("<p class='item'><br/>There are multiple sublets available at this location. Loading...<br/></p>").delay(2000).delay(10, function() { $('#offersmodal > div > p').fadeOut('slow', function () { $('#offersmodal > div').empty(function() { for (var i = 0; i < offers_for_modal.length; i++) {
		   				// 				// this is the rendered partial
		   				// 	    	var elem = $('#' + offers_for_modal[i].id.toString() + 'modal > div');
		   				// 	    	elem.clone().appendTo(offersmodal_inner);
		   				// 	     }}) })});
		   			}
		   			for (var i = 0; i < offers_for_modal.length; i++) {
		   				// this is the rendered partial
		   	    	var elem = $('#' + offers_for_modal[i].id.toString() + 'modal > div');
		   	    	elem.clone().appendTo(offersmodal_inner);
		   	    }
		   	    offersmodal.modal('show');
		   	    	// if there are multiple modals to show, then pull the
		   	    	// text for the other modals and 
		   	  		// generate the modal dynamically instead of having all these dumb modal show comments... much better!!!

		   	});
		   	markers.push(marker)
   		}
   	}

   	function deleteMarkers() {
	   	for (var i = 0; i < markers.length; i++) {
	   	  markers[i].setMap(null);
	   	}
	   	markers = []
   	}

	function componentToHex(c) {
	    var hex = c.toString(16);
	    return hex.length == 1 ? '0' + hex : hex;
	}

	// function rainbowColor(val, min, max)
	// {
	// 	var hue = Math.floor((max - val) * 120 / max);  // go from green to red
	// 	var saturation = Math.abs(val - ((max - min)/2))/((max - min)/2);   // fade to white as it approaches 50
	//     // var i = ((val - min) * (max - min) / (max - min));
	//     // var r = Math.round(Math.sin(0.024 * i + 0) * 127 + 128);
	//     // var g = Math.round(Math.sin(0.024 * i + 2) * 127 + 128);
	//     // var b = Math.round(Math.sin(0.024 * i + 4) * 127 + 128);
	//     // return componentToHex(r) + componentToHex(g) + componentToHex(b);
	// }

	var hsv2rgb = function(val, min, max) {
	  // adapted from http://schinckel.net/2012/01/10/hsv-to-rgb-in-javascript/
	  var h = Math.floor(((max - min) - (val - min)) * 120 / (max - min + 0.001));
      var s = Math.abs((val - min) - ((max - min)/2))/((max - min + 0.001)/2);
      var v = 1;
	  var rgb, i, data = [];
	  if (s === 0) {
	    rgb = [v,v,v];
	  } else {
	    h = h / 60;
	    i = Math.floor(h);
	    data = [v*(1-s), v*(1-s*(h-i)), v*(1-s*(1-(h-i)))];
	    switch(i) {
	      case 0:
	        rgb = [v, data[2], data[0]];
	        break;
	      case 1:
	        rgb = [data[1], v, data[0]];
	        break;
	      case 2:
	        rgb = [data[0], v, data[2]];
	        break;
	      case 3:
	        rgb = [data[0], data[1], v];
	        break;
	      case 4:
	        rgb = [data[2], data[0], v];
	        break;
	      default:
	        rgb = [v, data[0], data[1]];
	        break;
	    }
	  }
	  return rgb.map(function(x){
	    return ('0' + Math.round(x*255).toString(16)).slice(-2);
	  }).join('');
	};

	google.maps.event.addDomListener(window, 'load', initialize);
	//
	//
	//-------------------------------------------//
	//		Sorting, filtering, other features with our data
	//
	offers = <%=raw @offers.to_json %>
	offers = sortByKey(offers, 'rent')
	offers_filtered = offers
	offers_for_modal = offers_filtered
	bRentFiltered = false
	bDateFiltered = false
	sRentFilter = ''
	sStartDateFilter = ''
	sEndDateFilter = ''
	// TODO mismatched start/end date, illogical start/end date


	function sortByKey(array, key) {
	    return array.sort(function(a, b) {
	        var x = a[key]; var y = b[key];
	        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
	    });
	}

	$(document).ready(function() {
		$('#maxrent').keyup(function (event) {
			if (event.keyCode == 13) {
				return filterRent();
			}
		});
		$('#start-date').keyup(function (event) {
			if (event.keyCode == 13) {
				return filterDate();
			}
		});
		$('#end-date').keyup(function (event) {
			if (event.keyCode == 13) {
				return filterDate();
			}
		});
		$('#maxrentbutton').click(function() {
			return filterRent();
		});
		$('#datebutton').click(function() {
			return filterDate();
		});
	});

	function resetFilters() {
		bRentFiltered = false
		bDateFiltered = false
	}

	function updateFilterByText() {
		// This function is written a bit sloppily because we only have
		// four cases at the moment, this way is more efficient than 
		// concatenating strings. TODO add more filters.
		if (bRentFiltered && bDateFiltered) {
			text = 'Filter by: $' + sRentFilter + ', ' + sStartDateFilter + ' to ' + sEndDateFilter
		}
		else if (bDateFiltered) {
			text = 'Filter by:  ' + sStartDateFilter + ' to ' + sEndDateFilter
		}
		else if (bRentFiltered) {
			text = 'Filter by: $' + sRentFilter
		}
		else
		{
			text = 'Filter by:'
		}
		$('#filter-by').text(text)
	}

	active = 'rent'
	function togText(filter) {
		if (filter == 'clear')
		{
			resetFilters()
			generateMarkersByParameter(offers, 'rent');
		}
		else
		{
			if (filter != active) {
				$('#'+filter).addClass('active')
				$('#'+active).removeClass('active')
				$('#c-'+filter).css('display','block')
				$('#c-'+active).css('display','none')
				active = filter
			}
		}
		updateFilterByText()
	}

	function runFilters() {
		offersfiltered = offers
		if (bRentFiltered) {
			offersfiltered = offersfiltered.filter(function(item){return item['rent'] <= sRentFilter})
		}
		if (bDateFiltered) {
			offersfiltered = offersfiltered.filter(function(item){return ((item['start_date'] <= sStartDateFilter) && (item['end_date'] >= sEndDateFilter))})
		}
	}

	function filterRent() {
		bRentFiltered = true
		sRentFilter = $('#maxrent').val()
		runFilters()
		generateMarkersByParameter(offersfiltered, 'rent');
		updateFilterByText()
	}

	function filterDate() {
		bDateFiltered = true
		sStartDateFilter = $('#start-date').val()
		sEndDateFilter = $('#end-date').val()
		runFilters()
		generateMarkersByParameter(offersfiltered, 'rent');
		updateFilterByText()
	}

	function genOfferModal(address) {
		offers_for_modal = offers_filtered.filter(function(offer){return address == offer.line1})
		return offers_for_modal
	}
</script>

<!-- var pinColor = 'FE7569';
var pinImage = new google.maps.MarkerImage('http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|' + pinColor,
    new google.maps.Size(21, 34),
    new google.maps.Point(0,0),
    new google.maps.Point(10, 34))
var pinShadow = new google.maps.MarkerImage('http://chart.apis.google.com/chart?chst=d_map_pin_shadow',
    new google.maps.Size(40, 37),
    new google.maps.Point(0, 0),
    new google.maps.Point(12, 35))
var marker = new google.maps.Marker({
            position: new google.maps.LatLng(0,0), 
            map: map,
            icon: pinImage,
            shadow: pinShadow
        }) -->